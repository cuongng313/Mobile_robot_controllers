#!/usr/bin/env python
PACKAGE = "robot_controllers"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

grp_control_parameter = gen.add_group("Control parameters", type = "tab")

grp_control_parameter.add("rbfGainConstant", double_t, 0, "rbfGainConstant gain of the RBFNN", 25.0, 0.0, 200.0)
grp_control_parameter.add("rbf_muy", double_t, 0, "RBF learning rate", 0.0, 0.0, 1.0)
grp_control_parameter.add("kx", double_t, 0, "kx gain of the controller", 5.0, 0.0, 50.0)
grp_control_parameter.add("ky", double_t, 0, "ky gain of the controller", 5.0, 0.0, 50.0)
grp_control_parameter.add("ktheta", double_t, 0, "ktheta gain of the controller", 5.0, 0.0, 50.0)

grp_control_parameter.add("kx2", double_t, 0, "kx2 gain of the controller", 5.0, 0.0, 50.0)
grp_control_parameter.add("ky2", double_t, 0, "ky2 gain of the controller", 5.0, 0.0, 50.0)
grp_control_parameter.add("ktheta2", double_t, 0, "ktheta2 gain of the controller", 5.0, 0.0, 50.0)

grp_control_parameter.add("lambdaX", double_t, 0, "lambdaX gain of the sliding surface", 5.0, 0.0, 50.0)
grp_control_parameter.add("lambdaY", double_t, 0, "lambdaY gain of the sliding surface", 5.0, 0.0, 50.0)
grp_control_parameter.add("lambdaTheta", double_t, 0, "lambdaTheta gain of the sliding surface", 5.0, 0.0, 50.0)

grp_control_parameter.add("saturatedValue", double_t, 0, "saturatedValue of the controller", 2.0, 0.0, 50.0)



exit(gen.generate(PACKAGE, "robot_controllers", "RBFNNSMCcontrollerReconfigure"))